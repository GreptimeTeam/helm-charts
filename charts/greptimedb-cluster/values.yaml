image:
  # -- The image registry
  registry: docker.io
  # -- The image repository
  repository: greptime/greptimedb
  # -- The image tag
  tag: "v0.9.3"
  # -- The image pull secrets
  pullSecrets: []

initializer:
  # -- Initializer image registry
  registry: docker.io
  # -- Initializer image repository
  repository: greptime/greptimedb-initializer
  # -- Initializer image tag
  tag: v0.1.0-alpha.29

base:
  # -- The pod template for base
  podTemplate:
    # -- The base spec of main container
    main:
      resources:
        # -- The requested resources for the container
        requests: {}
        #  cpu: 500m
        #  memory: 512Mi

        # -- The resources limits for the container
        limits: {}
        #  cpu: "1"
        #  memory: "1Gi"

      # -- The environment variables for the container
      env: []

      # -- The command to be executed in the container
      command: []

      # -- The arguments to be passed to the command
      args: []

      # -- The config for readiness probe of the main container
      readinessProbe: {}
#        # -- The initial delay seconds for the readiness probe.
#        initialDelaySeconds: 5
#        # -- The timeout seconds for the readiness probe
#        timeoutSeconds: 1
#        # -- The period seconds for the readiness probe
#        periodSeconds: 10
#        # -- The success threshold for the readiness probe
#        successThreshold: 1
#        # -- The failure threshold for the readiness probe
#        failureThreshold: 3

    # -- The annotations to be created to the pod.
    annotations: {}
    # -- The labels to be created to the pod.
    labels: {}
    # -- The pod node selector
    nodeSelector: {}
    # -- The pod tolerations
    tolerations: []
    # -- The pod affinity
    affinity: {}
    # -- The global service account
    serviceAccountName: ""

# -- Frontend configure
frontend:
  # -- Frontend replicas
  replicas: 1

  # -- Extra toml file of frontend.
  configFile: ""

  # -- Extra raw toml config data of frontend. Skip if the `configFile` is used.
  configData: ""

  # -- The pod template for frontend
  podTemplate:
    # -- The spec of main container
    main:
      # -- The frontend image.
      image: ""

      resources:
        # -- The requested resources for the container
        requests: {}
        #  cpu: "1"
        #  memory: "2Gi"

        # -- The resources limits for the container
        limits: {}
        #  cpu: "1"
        #  memory: "2Gi"

      # -- The environment variables for the container
      env: []

      # -- The command to be executed in the container
      command: []

      # -- The arguments to be passed to the command
      args: []

      # -- The pod volumeMounts
      volumeMounts: []

      # -- The config for readiness probe of the main container
      readinessProbe: {}
#        # -- The initial delay seconds for the readiness probe.
#        initialDelaySeconds: 5
#        # -- The timeout seconds for the readiness probe
#        timeoutSeconds: 1
#        # -- The period seconds for the readiness probe
#        periodSeconds: 10
#        # -- The success threshold for the readiness probe
#        successThreshold: 1
#        # -- The failure threshold for the readiness probe
#        failureThreshold: 3

    # -- The annotations to be created to the pod.
    annotations: {}
    # -- The labels to be created to the pod.
    labels: {}
    # -- The pod node selector
    nodeSelector: {}
    # -- The pod tolerations
    tolerations: []
    # -- The pod affinity
    affinity: {}
    # -- The pod volumes
    volumes: []

    serviceAccount:
      # -- Create a service account
      create: false
      # -- The annotations for frontend serviceaccount
      annotations: {}

  # -- Frontend service
  service: {}

  # -- Frontend tls configure
  tls: {}
#    secretName: greptimedb-frontend-tls

# -- Meta configure
meta:
  # -- Meta replicas
  replicas: 1

  # -- Extra toml file of meta.
  configFile: ""

  # -- Extra raw toml config data of meta. Skip if the `configFile` is used.
  configData: ""

  # -- The pod template for meta
  podTemplate:
    # -- The spec of main container
    main:
      # -- The meta image.
      image: ""

      resources:
        # -- The requested resources for the container
        requests: {}
        #  cpu: "1"
        #  memory: "2Gi"

        # -- The resources limits for the container
        limits: {}
        #  cpu: "1"
        #  memory: "2Gi"

      # -- The environment variables for the container
      env: []

      # -- The command to be executed in the container
      command: []

      # -- The arguments to be passed to the command
      args: []

      # -- The pod volumeMounts
      volumeMounts: []

    # -- The annotations to be created to the pod.
    annotations: {}
    # -- The labels to be created to the pod.
    labels: {}
    # -- The pod node selector
    nodeSelector: {}
    # -- The pod tolerations
    tolerations: []
    # -- The pod affinity
    affinity: {}
    # -- The pod volumes
    volumes: []

    # -- The config for readiness probe of the main container
    readinessProbe: {}
#      # -- The initial delay seconds for the readiness probe.
#      initialDelaySeconds: 5
#      # -- The timeout seconds for the readiness probe
#      timeoutSeconds: 1
#      # -- The period seconds for the readiness probe
#      periodSeconds: 10
#      # -- The success threshold for the readiness probe
#      successThreshold: 1
#      # -- The failure threshold for the readiness probe
#      failureThreshold: 3

    serviceAccount:
      # -- Create a service account
      create: false
      # -- The annotations for meta serviceaccount
      annotations: {}

  # -- Meta etcd endpoints
  etcdEndpoints: "etcd.default.svc.cluster.local:2379"

  # -- Meta will store data with this key prefix
  storeKeyPrefix: ""

  # -- Whether to enable region failover
  enableRegionFailover: false

# -- Datanode configure
datanode:
  # -- Datanode replicas
  replicas: 3

  # -- Extra toml file of datanode.
  configFile: ""

  # -- Extra raw toml config data of datanode. Skip if the `configFile` is used.
  configData: ""

  # -- The pod template for datanode
  podTemplate:
    # -- The spec of main container
    main:
      # -- The datanode image.
      image: ""

      resources:
        # -- The requested resources for the container
        requests: {}
        #  cpu: "1"
        #  memory: "2Gi"

        # -- The resources limits for the container
        limits: {}
        #  cpu: "1"
        #  memory: "2Gi"

      # -- The environment variables for the container
      env: []

      # -- The command to be executed in the container
      command: []

      # -- The arguments to be passed to the command
      args: []

      # -- The pod volumeMounts
      volumeMounts: []

      # -- The config for readiness probe of the main container
      readinessProbe: {}
#        # -- The initial delay seconds for the readiness probe.
#        initialDelaySeconds: 5
#        # -- The timeout seconds for the readiness probe
#        timeoutSeconds: 1
#        # -- The period seconds for the readiness probe
#        periodSeconds: 10
#        # -- The success threshold for the readiness probe
#        successThreshold: 1
#        # -- The failure threshold for the readiness probe
#        failureThreshold: 3

    # -- The annotations to be created to the pod.
    annotations: {}
    # -- The labels to be created to the pod.
    labels: {}
    # -- The pod node selector
    nodeSelector: {}
    # -- The pod tolerations
    tolerations: []
    # -- The pod affinity
    affinity: {}
    # -- The pod volumes
    volumes: []

    serviceAccount:
      # -- Create a service account
      create: false
      # -- The annotations for datanode serviceaccount
      annotations: {}

  storage:
    # -- Storage class for datanode persistent volume
    storageClassName: null
    # -- Storage size for datanode persistent volume
    storageSize: 10Gi
    # -- Storage retain policy for datanode persistent volume
    storageRetainPolicy: Retain
    # -- The dataHome directory, default is "/data/greptimedb/"
    dataHome: "/data/greptimedb"
    # -- The wal directory of the storage, default is "/data/greptimedb/wal"
    walDir: "/data/greptimedb/wal"

# -- Flownode configure. **It's NOT READY YET**
flownode:
  # -- Enable flownode
  enabled: false

  # -- Flownode replicas
  replicas: 1

  # -- Extra toml file of flownode.
  configFile: ""

  # -- Extra raw toml config data of flownode. Skip if the `configFile` is used.
  configData: ""

  # -- The pod template for frontend
  podTemplate:
    # -- The spec of main container
    main:
      # -- The flownode image.
      image: ""

      resources:
        # -- The requested resources for the container
        requests: {}
        #  cpu: "1"
        #  memory: "2Gi"

        # -- The resources limits for the container
        limits: {}
        #  cpu: "1"
        #  memory: "2Gi"

      # -- The environment variables for the container
      env: []

      # -- The command to be executed in the container
      command: []

      # -- The arguments to be passed to the command
      args: []

      # -- The pod volumeMounts
      volumeMounts: []

      # -- The config for readiness probe of the main container
      readinessProbe: {}
#        # -- The initial delay seconds for the readiness probe.
#        initialDelaySeconds: 5
#        # -- The timeout seconds for the readiness probe
#        timeoutSeconds: 1
#        # -- The period seconds for the readiness probe
#        periodSeconds: 10
#        # -- The success threshold for the readiness probe
#        successThreshold: 1
#        # -- The failure threshold for the readiness probe
#        failureThreshold: 3

    # -- The annotations to be created to the pod.
    annotations: {}
    # -- The labels to be created to the pod.
    labels: {}
    # -- The pod node selector
    nodeSelector: {}
    # -- The pod tolerations
    tolerations: []
    # -- The pod affinity
    affinity: {}
    # -- The pod volumes
    volumes: []

    serviceAccount:
      # -- Create a service account
      create: false
      # -- The annotations for flownode serviceaccount
      annotations: {}

# -- GreptimeDB http service port
httpServicePort: 4000
# -- GreptimeDB grpc service port
grpcServicePort: 4001
# -- GreptimeDB mysql service port
mysqlServicePort: 4002
# -- GreptimeDB postgres service port
postgresServicePort: 4003

# -- Configure to prometheus PodMonitor
prometheusMonitor:
  # -- Create PodMonitor resource for scraping metrics using PrometheusOperator
  enabled: false
  # -- Interval at which metrics should be scraped
  interval: "30s"
  # -- Add labels to the PodMonitor
  labels:
    release: prometheus

# -- Configure to object storage
objectStorage:
#  credentials:
#    accessKeyId: "you-should-set-the-access-key-id-here"
#    secretAccessKey: "you-should-set-the-secret-access-key-here"
#    serviceAccountKey: "you-should-set-the-base64-service-account-key-here"
#    secretName: ""
#    existingSecretName: ""

  # configure to use s3 storage.
  s3: {}
#    bucket: "bucket-name"
#    region: "us-west-2"

#    # The data directory in S3 will be: 's3://<bucket>/<root>/data/...'.
#    root: "mycluster"
#    endpoint: "s3.us-west-2.amazonaws.com"   # See more detail: https://docs.aws.amazon.com/general/latest/gr/s3.html

  # configure to use oss storage.
  oss: {}
#    bucket: "bucket-name"
#    region: "cn-hangzhou"

#    # The data directory in OSS will be: 'oss://<bucket>/<root>/data/...'.
#    root: "mycluster"
#    endpoint: "oss-cn-hangzhou.aliyuncs.com"

  # configure to use gcs storage
  gcs: {}
  #  bucket: "bucket-name"
  #  Scope: "" # example: "https://www.googleapis.com/auth/devstorage.read_write"

  #  # The data directory in gcs will be: 'gcs://<bucket>/<root>/data/...'.
  #  root: "mycluster"
  #  endpoint: "https://storage.googleapis.com"

# -- Configure to remote wal
remoteWal:
  # -- Enable remote wal
  enabled: false
  # -- The remote wal type, only support kafka now.
  kafka:
    # -- The kafka broker endpoints
    brokerEndpoints: []

# -- The static auth for greptimedb, only support one user now(https://docs.greptime.com/user-guide/operations/authentication).
auth:
  # -- Enable static auth
  enabled: false
  # -- The auth file path to store the auth info
  mountPath: "/etc/greptimedb/auth"
  # -- The auth file name, the full path is `${mountPath}/${fileName}`
  fileName: "passwd"
  # -- The users to be created in the auth file
  users:
    - username: "admin"
      password: "admin"

debugPod:
  # -- Enable debug pod
  enabled: false

  # -- The debug pod image
  image:
    registry: docker.io
    repository: greptime/greptime-tool
    tag: "20240905-67eaa147"

  # -- The debug pod resource
  resources:
    requests:
      memory: 64Mi
      cpu: 50m
    limits:
      memory: 256Mi
      cpu: 200m
