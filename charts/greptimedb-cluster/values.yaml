image:
  # -- The image registry
  registry: docker.io
  # -- The image repository
  repository: greptime/greptimedb
  # -- The image tag
  tag: "v0.4.4"
  # -- The image pull secrets
  pullSecrets: []

resources:
  # -- The requested resources for the container
  requests:
    cpu: 500m
    memory: 512Mi
  # -- The resources limits for the container
  limits:
    cpu: 500m
    memory: 512Mi

serviceAccount:
  # -- Create a service account
  create: true
  # -- The serviceaccount name
  name: greptimedb-cluster
  # -- The annotations for serviceaccount
  annotations: {}

frontend:
  # -- Frontend replicas
  replicas: 1

  # -- Extra frontend config in toml format.
  config: ""

  # -- The pod template for frontend.
  podTemplate: {}

  # -- Frontend service
  service: {}

  # -- Frontend tls configure
  tls: {}
#    secretName: greptimedb-frontend-tls

meta:
  # -- Meta replicas
  replicas: 1

  # -- Extra Meta config in toml format.
  config: ""

  # -- The pod template for Meta.
  podTemplate: {}

  # -- Meta etcd endpoints
  etcdEndpoints: "etcd.default.svc.cluster.local:2379"

datanode:
  # -- Datanode replicas
  replicas: 3

  # -- Extra datanode config in toml format.
  config: ""

  # -- The pod template for datanode.
  podTemplate: {}

  storage:
    # -- Storage class for datanode persistent volume
    storageClassName: null
    # -- Storage size for datanode persistent volume
    storageSize: 10Gi
    # -- Storage retain policy for datanode persistent volume
    storageRetainPolicy: Retain
    # -- The wal directory of the storage, default is "/tmp/greptimedb/wal"
    walDir: "/tmp/greptimedb/wal"

initializer:
  # -- Initializer image registry
  registry: docker.io
  # -- Initializer image repository
  repository: greptime/greptimedb-initializer
  # -- Initializer image tag
  tag: 0.1.0-alpha.17

# -- GreptimeDB http service port
httpServicePort: 4000

# -- GreptimeDB grpc service port
grpcServicePort: 4001

# -- GreptimeDB mysql service port
mysqlServicePort: 4002

# -- GreptimeDB postgres service port
postgresServicePort: 4003

# -- GreptimeDB opentsdb service port
openTSDBServicePort: 4242

# -- Configure to prometheus podmonitor
prometheusMonitor: {}
#  enabled: false
#  path: "/metrics"
#  port: "http"
#  interval: "30s"
#  honorLabels: true
#  labelsSelector:
#    release: prometheus

# -- Configure to storage
storage:
#  credentials:
#    secretName: "credentials"
#    accessKeyId: "you-should-set-the-access-key-id-here"
#    secretAccessKey: "you-should-set-the-secret-access-key-here"

  # configure to use local storage.
  local: {}
#    directory: /tmp/greptimedb

  # configure to use s3 storage.
  s3: {}
#    bucket: "bucket-name"
#    region: "us-west-2"

#    # The data directory in S3 will be: 's3://<bucket>/<root>/data/...'.
#    root: "mycluster"
#    endpoint: "s3.us-west-2.amazonaws.com"   # See more detail: https://docs.aws.amazon.com/general/latest/gr/s3.html

  # configure to use oss storage.
  oss: {}
#    bucket: "bucket-name"
#    region: "cn-hangzhou"

#    # The data directory in OSS will be: 'oss://<bucket>/<root>/data/...'.
#    root: "mycluster"
#    endpoint: "oss-cn-hangzhou.aliyuncs.com"
