apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "greptimedb-standalone.fullname" . }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "greptimedb-standalone.labels" . | nindent 4 }}
  {{- if not (empty .Values.annotations) }}
  annotations:
    {{- with .Values.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  replicas: 1
  updateStrategy:
    rollingUpdate:
      partition: 0
  serviceName: {{ include "greptimedb-standalone.fullname" . }}
  {{- if and (semverCompare ">= 1.23-0" .Capabilities.KubeVersion.Version) (.Values.persistence.enableStatefulSetAutoDeletePVC) (.Values.persistence.enabled) }}
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: {{ .Values.persistentVolumeClaimRetentionPolicy.whenDeleted }}
    whenScaled: {{ .Values.persistentVolumeClaimRetentionPolicy.whenScaled }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "greptimedb-standalone.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "greptimedb-standalone.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "greptimedb-standalone.serviceAccountName" . }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
        - name: {{ include "greptimedb-standalone.fullname" . }}
          image: {{ printf "%s/%s:%s" .Values.image.registry .Values.image.repository .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if .Values.command }}
            {{- toYaml .Values.command | nindent 12 }}
          {{- else }}
            - "greptime"
            - "standalone"
            - "start"
          {{- end }}
          args:
            - "--http-addr"
            - "0.0.0.0:{{ .Values.httpServicePort }}"
            - "--rpc-bind-addr"
            - "0.0.0.0:{{ .Values.grpcServicePort }}"
            - "--mysql-addr"
            - "0.0.0.0:{{ .Values.mysqlServicePort }}"
            - "--postgres-addr"
            - "0.0.0.0:{{ .Values.postgresServicePort }}"
            {{- if .Values.configToml }}
            - "--config-file"
            - "/etc/greptimedb/config/config.toml"
            {{- end }}
            {{- if .Values.dataHome }}
            - "--data-home"
            - {{ .Values.dataHome }}
            {{- end }}
          {{- if .Values.args }}
            {{- toYaml .Values.args | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.httpServicePort }}
              name: http
              protocol: TCP
            - containerPort: {{ .Values.grpcServicePort }}
              name: grpc
              protocol: TCP
            - containerPort: {{ .Values.mysqlServicePort }}
              name: mysql
              protocol: TCP
            - containerPort: {{ .Values.postgresServicePort }}
              name: postgres
              protocol: TCP
          {{- if or .Values.env .Values.auth.enabled }}
          env:
            {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            {{- if .Values.auth.enabled }}
            - name: GREPTIMEDB_STANDALONE__USER_PROVIDER
              value: "static_user_provider:file:{{ .Values.auth.mountPath }}/{{ .Values.auth.fileName }}"
            {{- end }}
          {{- end }}
          {{- if .Values.objectStorage }}
          {{- if .Values.objectStorage.credentials }}
          envFrom:
            - secretRef:
                {{- if .Values.objectStorage.credentials.existingSecretName }}
                name: {{ .Values.objectStorage.credentials.existingSecretName }}
                {{- else }}
                name: {{ include "greptimedb-standalone.fullname" . }}-secret
                {{- end }}
          {{- end }}
          {{- end }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- if .Values.configToml }}
            - name: config
              mountPath: /etc/greptimedb/config
              readOnly: true
            {{- end }}
            {{- if .Values.auth.enabled }}
            - name: auth
              mountPath: {{ .Values.auth.mountPath }}
              readOnly: true
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
                {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        {{- if .Values.configToml }}
        - name: config
          configMap:
            name: {{ include "greptimedb-standalone.fullname" . }}-config
        {{- end }}
        {{- if .Values.auth.enabled }}
        - name: auth
          secret:
            secretName: {{ include "greptimedb-standalone.fullname" . }}-users-auth
        {{- end }}
        {{- with .Values.extraVolumes }}
            {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        {{- with .Values.persistence.storageClass }}
        storageClassName: {{ if (eq "-" .) }}""{{ else }}{{ . }}{{ end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- with .Values.persistence.selector }}
        selector:
          {{- toYaml . | nindent 10 }}
        {{- end }}
  {{- end }}
