apiVersion: greptime.io/v1alpha1
kind: GreptimeDBCluster
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  base:
    main:
      image: '{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}'
      {{- if .Values.resources }}
      resources: {{- toYaml .Values.resources | nindent 8 }}
      {{- end }}
    {{- if .Values.image.pullSecrets }}
    imagePullSecrets:
    {{- range .Values.image.pullSecrets }}
      - name: {{ . }}
    {{- end }}
    {{- end }}
  frontend:
    replicas: {{ .Values.frontend.replicas }}
    {{- if .Values.frontend.tls }}
    tls:
      secretName: {{ .Values.frontend.tls.certificates.secretName }}
      certificateMountPath: {{ .Values.frontend.tls.certificates.mountPath }}
    {{- end }}
    {{- if .Values.frontend.service }}
    service: {{- toYaml .Values.frontend.service | nindent 6 }}
    {{- end }}
    {{- if .Values.frontend.componentSpec }}
    template: {{- toYaml .Values.frontend.componentSpec | nindent 6 }}
    {{- end }}
  meta:
    replicas: {{ .Values.meta.replicas }}
{{- if .Values.etcdEndpoints }}
    etcdEndpoints:
      - {{ .Values.etcdEndpoints }}
{{- end }}
  datanode:
    replicas: {{ .Values.datanode.replicas }}
    storage:
      storageClassName: {{ .Values.datanode.storage.storageClassName }}
      storageSize: {{ .Values.datanode.storage.storageSize }}
      storageRetainPolicy: {{ .Values.datanode.storage.storageRetainPolicy }}
  {{- if (and .Values.prometheusMonitor .Values.prometheusMonitor.enabled )}}
  prometheusMonitor: {{- toYaml .Values.prometheusMonitor | nindent 4 }}
  {{- end }}
  httpServicePort: {{ .Values.httpServicePort }}
  grpcServicePort: {{ .Values.grpcServicePort }}
  mysqlServicePort: {{ .Values.mysqlServicePort }}
  postgresServicePort: {{ .Values.postgresServicePort }}
  openTSDBServicePort: {{ .Values.openTSDBServicePort }}
  initializer:
    image: '{{ .Values.initializer.registry }}/{{ .Values.initializer.repository }}:{{ .Values.initializer.tag }}'
  storage:
    {{- if .Values.storage.s3 }}
    s3:
      bucket: {{ .Values.storage.s3.bucket }}
      region: {{ .Values.storage.s3.region }}
      prefix: {{ .Values.storage.s3.prefix }}
      secretName: {{ .Values.storage.s3.credentials.secretName }}
    {{- else if .Values.storage.local }}
    local:
      directory: {{ .Values.storage.local.directory }}
    {{- else }}
    {}
    {{- end }}
