image:
  registry: docker.io
  # The image repository
  repository: greptime/greptimedb
  # The image tag
  tag: "v0.4.0"
  # The image pull secrets.
  pullSecrets: []

resources:
  requests:
    cpu: 500m
    memory: 512Mi
  limits:
    cpu: 500m
    memory: 512Mi

frontend:
  replicas: 1
  service: {}
  componentSpec: {}

  tls: {}
#    certificates:
#      secretName: greptimedb-frontend-tls
#      secretCreation:
#        enabled: true
#        enableEncryption: false
#        data:
#          ca.crt: ""
#          tls.crt: ""
#          tls.key: ""

meta:
  replicas: 1
  componentSpec: {}

datanode:
  replicas: 3
  componentSpec: {}
  storage:
    storageClassName: null
    storageSize: 10Gi
    storageRetainPolicy: Retain

#    # The wal directory of the storage, default is "/tmp/greptimedb/wal".
#    walDir: "/tmp/greptimedb/wal"

initializer:
  registry: docker.io
  repository: greptime/greptimedb-initializer
  tag: 0.1.0-alpha.17

# The etcdEndpoints need be modified to the actual etcd cluster.
etcdEndpoints: "etcd.default.svc.cluster.local:2379"

httpServicePort: 4000
grpcServicePort: 4001
mysqlServicePort: 4002
postgresServicePort: 4003
openTSDBServicePort: 4242

# configure to prometheus podmonitor
prometheusMonitor: {}
#  enabled: true
#  path: "/metrics"
#  port: "http"
#  interval: "30s"
#  honorLabels: true
#  labelsSelector:
#    release: prometheus

storage:
#  credentials:
#    secretName: "credentials"
#    secretCreation:
#    # Create the raw secret.
#      enabled: true
#      # Create the sealed secret.
#      # If enableEncryption is true, the credentials should be encrypted.
#      enableEncryption: false
#
#      # If the enableEncryption is true, the data should be set as encrypted data.
#      data:
#        access-key-id: "you-should-set-the-access-key-id-here"
#        secret-access-key: "you-should-set-the-secret-access-key-here"

  # configure to use local storage.
  local: {}
#    directory: /tmp/greptimedb

  # configure to use s3 storage.
  s3: {}
#    bucket: "bucket-name"
#    region: "us-west-2"

#    # The root directory of the cluster.
#    # The data directory in S3 will be: 's3://<bucket>/<root>/data/...'.
#    root: "mycluster"
#    endpoint: "s3.us-west-2.amazonaws.com"
#    secretName: "credentials"

  # configure to use oss storage.
  oss: {}
#    bucket: "bucket-name"
#    region: "cn-hangzhou"

#    # The root directory of the cluster.
#    # The data directory in OSS will be: 'oss://<bucket>/<root>/data/...'.
#    root: "mycluster"
#    endpoint: "oss-cn-hangzhou.aliyuncs.com"
#    secretName: "credentials"
