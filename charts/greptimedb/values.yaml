image:
  registry: docker.io
  # The image repository
  repository: greptime/greptimedb
  # The image tag
  tag: 0.1.2
  # The image pull secrets.
  pullSecrets: []

resources:
  requests:
    cpu: 250m
    memory: 64Mi
  limits:
    cpu: 500m
    memory: 128Mi

frontend:
  replicas: 1
  service: {}
  componentSpec: {}

  tls: {}
#    certificates:
#      mountPath: /etc/greptimedb-frontend-tls
#      secretName: greptimedb-frontend-tls
#      secretCreation:
#        enabled: true
#        enableEncryption: false
#        data:
#          ca.crt: ""
#          tls.crt: ""
#          tls.key: ""

meta:
  replicas: 1

datanode:
  replicas: 3
  storage:
    storageClassName: standard
    storageSize: 10Gi
    storageRetainPolicy: Retain

initializer:
  registry: docker.io
  repository: greptime/greptimedb-initializer
  tag: 0.1.0-alpha.9

# The etcdEndpoints need be modified to the actual etcd cluster.
etcdEndpoints: "etcd.default.svc.cluster.local:2379"

httpServicePort: 4000
grpcServicePort: 4001
mysqlServicePort: 4002
postgresServicePort: 4003
openTSDBServicePort: 4242

enablePrometheusMonitor: false

storage:
  # configure to use local storage.
  local: {}
#    directory: /tmp/greptimedb

  # configure to use s3 storage.
  s3: {}
#    bucket: "greptimedb"
#    region: "us-west-2"
#    prefix: "/data"
#    credentials:
#      secretName: "s3-credentials"
#      secretCreation:
#        # Create the raw secret.
#        enabled: true
#        # Create the sealed secret.
#        # If enableEncryption is true, the credentials should be encrypted.
#        enableEncryption: false
#        data:
#          access-key-id: ""
#          secret-access-key: ""
